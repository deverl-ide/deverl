%% =====================================================================
%% @author
%% @copyright
%% @title
%% @version
%% @doc
%% @end
%% =====================================================================

-module().

-behaviour(gen_server).

%% Gen server callbacks
-export([init/1, handle_info/2, handle_call/3, handle_cast/2,
				 handle_event/2, code_change/3, terminate/2]).

%% API
-export([start/0]).


%% =====================================================================
%% Client API
%% =====================================================================

%% Place your exported functions here
start() ->
  gen_server:start_link({local, ?MODULE}, ?MODULE, [], []).

%% =====================================================================
%% Callback functions
%% =====================================================================

%% init(Args) -> {ok, State}
%%             | {ok, State, Timeout}
%%             | {ok, State, hibernate}
%%             | {stop, Reason}
%%             | ignore
%% Initialises the server, called when the gen_server is started.

init(Config) ->
	State=#state{}, %% Initialise the server's state
	{ok, State}.

handle_info(Msg, State) ->
	io:format("Got info: ~p~n", [Msg]),
	{noreply, State}.

handle_call(Msg, _From, State) ->
	io:format("Got call: ~p~n", [Msg]),
	{reply, ok, State}.

handle_cast(Msg, State) ->
	io:format("Got cast: ~p~n", [Msg]),
	{noreply, State}.

handle_event(Evt, State) ->
	io:format("Got event: ~p~n", [Evt]),
	{noreply, State}.

code_change(_, _, State) ->
	{ok, State}.

terminate(_Reason, _State) ->
  ok.

%% =====================================================================
%% Internal functions
%% =====================================================================

%% Place internal (non-exported functions) here
